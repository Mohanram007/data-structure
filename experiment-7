#include <iostream>
#include <algorithm>
#include <string>
#include <vector>

std::pair<std::string, std::vector<int>> sortAndFindRepeated(const std::string& s) {
    std::string sortedS = s;
    std::sort(sortedS.begin(), sortedS.end());

    std::vector<int> repeatedIndices;
    for (int i = 0; i < sortedS.size() - 1; i++) {
        if (sortedS[i] == sortedS[i + 1]) {
            repeatedIndices.push_back(i);
        }
    }

    return {sortedS, repeatedIndices};
}

int main() {
    std::string s;
    std::cout << "Enter a string: ";
    std::cin >> s;

    auto [sortedS, repeatedIndices] = sortAndFindRepeated(s);

    std::cout << "Sorted string: " << sortedS << std::endl;
    std::cout << "Starting indices of repeated characters: ";
    for (int i : repeatedIndices) {
        std::cout << i << " ";
    }
    std::cout << std::endl;

    return 0;
}
